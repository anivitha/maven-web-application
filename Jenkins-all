pipeline {
agent any 
environment{
    PATH = "/opt/maven/bin:$PATH"
}
stages {
      stage('checkout') {
         steps {
            echo 'pulling the code'
            git 'https://github.com/sureshtechnologies-ec/maven-web-application.git'
        }
        }
        stage('maven build'){
       steps{
           echo "building the jars"
           sh " mvn clean package "
        }
        }
        stage('SonarQube analysis') {
//    def scannerHome = tool 'SonarScanner 4.0';
        steps{
        withSonarQubeEnv('sonar-server') { 
        // If you have configured more than one global server connection, you can specify its name
//      sh "${scannerHome}/bin/sonar-scanner"
        sh "mvn sonar:sonar"
}
}
}
 stage('tomcat-deploy'){
       steps{
sshagent(['tomcat-user']) {
                         
       sh "scp -o  StrictHostKeyChecking=no  target/maven-web-application.war ec2-user@3.19.188.249:/opt/tomcat/webapps/maven-web-application.war"
                                }
    
    }
    }
}
}
}
